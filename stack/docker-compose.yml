# Main stack.
#
# Copyright (c) 2022 Cisco and/or its affiliates. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# AUTHOR(s): Cristina Precup <cprecup@cisco.com>
# CONTRIBUTOR(s): Patrice Nivaggioli <pnivaggi@cisco.com>
#                 Guillaume Ladhuie <gladhuie@cisco.com>
#                 Steven Barth <stbarth@cisco.com>

version: '3.8'
services:

  telegraf:
    build:
      context: ./telegraf
      args:
        HTTPS_PROXY: $HTTPS_PROXY
    container_name: telegraf
    ports:
      - 57500:57500
    hostname: telegraf
    command: telegraf --watch-config inotify --config-directory /etc/telegraf/telegraf.d
    volumes:
      - "./telegraf/telegraf-sample.conf:/etc/telegraf/telegraf.conf:ro"
      - "./telegraf/telegraf.d:/etc/telegraf/telegraf.d:ro"
    env_file:
      - .env
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    links:
      - influxdb
    depends_on:
      - influxdb
    networks:
      - green
    restart: always

  influxdb:
    image: influxdb:2.0.4-alpine
    container_name: influxdb
    ports:
      - 8086:8086
    volumes:
      - influxdb-data-etc:/etc/influxdb2
      - influxdb-data-var:/var/lib/influxdb2
    env_file:
      - .env
    networks:
      - green
    restart: always

  grafana:
    image: grafana/grafana:9.2.0
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards:ro
    env_file:
      - .env
    environment:
      # Grafana has to use Proxy mode for a successful connection;
      # Therefore, one accesses InfluxDB through the host network.
      INFLUX_HOST_v2: $HOST_IP
    links:
      - influxdb
    depends_on:
      - influxdb
    networks:
      - green
    restart: always

volumes:
  grafana-data:
    driver: local
  influxdb-data-etc:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/influxdb/influxdb-data-etc
  influxdb-data-var:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ${PWD}/influxdb/influxdb-data-var/lib/influxdb2

networks:
  green:
    driver: bridge
